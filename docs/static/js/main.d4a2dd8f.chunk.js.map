{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","components/Search.jsx","Hooks/useCharacters.js","components/Characters.jsx","Hooks/useDarkMode.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","Header","darkMode","setDarkMode","colorDark","useContext","className","style","backgroundColor","color","type","onClick","Search","search","searchInput","handleSearch","placeholder","ref","value","onChange","useCharacters","url","useState","characters","setCharacters","useEffect","fetch","then","response","json","data","results","Container","styled","div","props","Card","Button","button","Favorite","img","CardFavorite","section","initialState","favorites","favoriteReducer","state","action","find","x","id","payload","filter","Characters","useReducer","dispatch","setSearch","useRef","useCallback","current","filterUsers","useMemo","user","name","toLowerCase","includes","Fragment","length","map","favorite","src","image","cursor","handleClickRemove","character","alt","status","species","gender","useDarkMode","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.d4a2dd8f.chunk.js","sourcesContent":["import React from 'react'\n\nconst ThemeContext = React.createContext(null);\n\nexport default ThemeContext;","import React, { useContext } from 'react';\nimport '../styles/Header.css';\nimport ThemeContext from '../context/ThemeContext';\n\n\nconst Header = ({ darkMode, setDarkMode }) => {\n  const handleClick = () => {\n    setDarkMode(!darkMode);\n  }\n\n  const colorDark = useContext(ThemeContext);\n\n  return (\n    <div className=\"Header\"\n      style={darkMode ? { backgroundColor: colorDark, color: 'white' }\n        : { backgroundColor: 'white' }}>\n      <h1 style={!darkMode ? { color: colorDark } : null}>ReactHooks</h1>\n      <button\n        style={darkMode ? { color: 'white' } : { color: colorDark }}\n        type=\"button\"\n        onClick={handleClick}>\n        {darkMode ? 'Dark Mode' : 'Light Mode'}\n      </button>\n    </div>\n  )\n}\n\nexport default Header;\n\n","import React from 'react';\nimport '../styles/search.css'\n\nconst Search = ({ search, searchInput, handleSearch }) => {\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"Search\" ref={searchInput} value={search} onChange={handleSearch} className=\"search\" />\n    </div>\n  )\n}\n\nexport default Search;\n","import { useState, useEffect } from 'react';\n\nconst useCharacters = url => {\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => setCharacters(data.results))\n  }, [url]);\n  return characters;\n}\n\nexport default useCharacters;","import React, { useState, useContext, useReducer, useMemo, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport ThemeContext from '../context/ThemeContext';\nimport Search from './Search'\nimport useCharacters from '../Hooks/useCharacters';\n\n\nconst Container = styled.div`\n  background-color: ${props => props.darkMode ? props.colorDark : 'white'};\n  color: ${props => props.darkMode ? 'white' : props.colorDark};\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  gap: 20px;\n  margin: 10px;\n`\nconst Card = styled.div`\n  height: 100%;\n  box-shadow: 2px 6px 8px rgba(0,0,0,0.19);\n  border-radius: 8px;\n\n  img {\n    width: 100%;\n    border-radius: 8px;\n  }\n\n  h2,h4 {\n    margin: 0;\n    margin-bottom: 4px;\n  }\n`\nconst Button = styled.button`\n  color: ${props => props.darkMode ? 'white' : props.colorDark};\n  background-color: transparent;\n  padding: 4px;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  font-weight: bold;\n`\n\nconst Favorite = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n`\nconst CardFavorite = styled.section`\n  display: flex;\n  justify-content: space-around;\n`\n\nconst initialState = {\n  favorites: []\n}\n\nconst API = 'https://rickandmortyapi.com/api/character/'\n\nconst favoriteReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_FAVORITE':\n      const isExist = state.favorites.find(x => x.id === action.payload.id);\n      if (isExist) return { ...state }\n      return {\n        ...state,\n        favorites: [...state.favorites, action.payload],\n      }\n    case 'REMOVE_FAVORITE':\n      return {\n        ...state,\n        favorites: state.favorites.filter(x => x.id !== action.payload.id)\n      }\n    default:\n      return state;\n  }\n}\n\nconst Characters = ({ darkMode }) => {\n  const colorDark = useContext(ThemeContext);\n  const [favorites, dispatch] = useReducer(favoriteReducer, initialState);\n  const [search, setSearch] = useState('');\n  const searchInput = useRef(null);\n\n  const characters = useCharacters(API);\n\n  const handleClick = (favorite) => {\n    dispatch({ type: 'ADD_TO_FAVORITE', payload: favorite });\n  }\n\n  const handleClickRemove = (favorite) => {\n    dispatch({ type: 'REMOVE_FAVORITE', payload: favorite })\n  }\n\n  // const handleSearch = () => {\n  //   setSearch(searchInput.current.value)\n  // }\n\n  const handleSearch = useCallback(() => {\n    setSearch(searchInput.current.value)\n  }, [])\n\n  // const filterUsers = characters.filter((user) => {\n  //   return user.name.toLowerCase().includes(search.toLowerCase())\n  // })\n\n  const filterUsers = useMemo(() =>\n    characters.filter((user) => {\n      return user.name.toLowerCase().includes(search.toLowerCase());\n    }),\n    [characters, search]\n  )\n\n  return (\n    <React.Fragment>\n      <Search searchInput={searchInput} search={search} handleSearch={handleSearch} />\n      {favorites.favorites.length ? <h2 style={darkMode ? { color: 'white' } : { color: colorDark }}>Favoritos</h2> : null}\n      <CardFavorite>\n        {favorites.favorites.map(favorite => (\n          <div>\n            <Favorite src={favorite.image} />\n            <span\n              style={{ cursor: 'pointer', color: 'red' }}\n              onClick={() => handleClickRemove(favorite)}>\n              x\n            </span>\n          </div>\n        ))}\n      </CardFavorite>\n      <Container darkMode={darkMode} colorDark={colorDark}>\n        {\n          filterUsers.map(character => (\n            <Card key={character.id}>\n              <img src={character.image} alt={character.name} />\n              <div>\n                <h2>{character.name}</h2>\n                <h4>{character.status}</h4>\n                <h4>{character.species}</h4>\n                <h4>{character.gender}</h4>\n                <Button\n                  type=\"button\"\n                  darkMode={darkMode} colorDark={colorDark}\n                  onClick={() => handleClick(character)}>\n                  Añadir a Favoritos\n                </Button>\n              </div>\n            </Card>\n          ))\n        }\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default Characters;\n","import { useState } from 'react';\n\nfunction useDarkMode() {\n  const [darkMode, setDarkMode] = useState(true);\n\n  return [darkMode, setDarkMode];\n}\n\nexport default useDarkMode;","import React, {useContext} from 'react';\nimport Header from './components/Header';\nimport Characters from './components/Characters';\nimport useDarkMode from './Hooks/useDarkMode';\nimport ThemeContext from './context/ThemeContext'\n\nimport './App.css';\n\nfunction App() {\n  const colorDark = useContext(ThemeContext)\n  const [darkMode, setDarkMode] = useDarkMode();\n  return (\n    <div className=\"App\"  style={darkMode? {backgroundColor: colorDark, color: 'white'} : {backgroundColor: 'white'}}>\n      <Header darkMode={darkMode} setDarkMode={setDarkMode}/>\n      <Characters darkMode={darkMode} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeContext from './context/ThemeContext';\n\nconst ThemeColor = \"#252850\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContext.Provider value={ThemeColor}>\n      <App />\n    </ThemeContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}